import discord
from discord.ext import commands
from discord import app_commands, ui
import datetime
import sys
import os
import re
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–∞—Ç–∞–ª–æ–≥ –≤ sys.path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ config
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
import config

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º—å—é—Ç–∞
class MuteModal(ui.Modal, title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—å—é—Ç–∞"):
    def __init__(self, user_id, mute_type, role_id):
        super().__init__()
        self.user_id = user_id
        self.mute_type = mute_type
        self.role_id = role_id
        
    duration = ui.TextInput(
        label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (1—á-16—á)",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2—á)",
        min_length=2,
        max_length=3,
        required=True
    )
    
    reason = ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –º—å—é—Ç–∞",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –Ω–∞–∫–∞–∑–∞–Ω–∏—è",
        min_length=3,
        max_length=100,
        required=True
    )
    
    async def on_submit(self, interaction: discord.Interaction):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1—á –¥–æ 16—á)
        duration_str = self.duration.value.lower()
        if not re.match(r'^([1-9]|1[0-6])—á$', duration_str):
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1—á –¥–æ 16—á.", ephemeral=True)
            return
            
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∞—Å–æ–≤ –∏–∑ –≤–≤–æ–¥–∞
        hours = int(duration_str[:-1])
        if hours < 1 or hours > 16:
            await interaction.response.send_message("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 16 —á–∞—Å–æ–≤.", ephemeral=True)
            return
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ —Ä–æ–ª–∏
        member = interaction.guild.get_member(self.user_id)
        role = interaction.guild.get_role(int(self.role_id))
        
        if not member or not role:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Ä–æ–ª—å.", ephemeral=True)
            return
            
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            reason_text = self.reason.value
            await member.add_roles(role, reason=f"{self.mute_type} –º—å—é—Ç: {reason_text}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            await interaction.response.send_message(
                f"‚úÖ {self.mute_type} –º—å—é—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ {member.mention} –Ω–∞ {duration_str}. –ü—Ä–∏—á–∏–Ω–∞: {reason_text}", 
                ephemeral=False
            )
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
            if hasattr(config, 'CHANNEL_LOG_ID') and config.CHANNEL_LOG_ID:
                try:
                    log_channel = interaction.guild.get_channel(int(config.CHANNEL_LOG_ID))
                    if log_channel:
                        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–∞
                        log_embed = discord.Embed(
                            title=f"{self.mute_type} –ú—å—é—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω",
                            color=discord.Color.dark_embed(),
                            timestamp=datetime.now()
                        )
                        log_embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention} ({interaction.user.id})", inline=False)
                        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{member.mention} ({member.id})", inline=False)
                        log_embed.add_field(name="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=duration_str, inline=True)
                        log_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason_text, inline=True)
                        
                        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
                        if member.avatar:
                            log_embed.set_thumbnail(url=member.avatar.url)
                            
                        await log_channel.send(embed=log_embed)
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –º—å—é—Ç–∞ –≤ –ª–æ–≥: {e}")
            
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–æ–ª–∏ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# –í–∏–¥ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –º—å—é—Ç–æ–º
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ MuteView –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞
class MuteView(ui.View):
    def __init__(self, user_id, member):
        super().__init__(timeout=60)  # –ö–Ω–æ–ø–∫–∏ –∏—Å—Ç–µ–∫–∞—é—Ç —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
        self.user_id = user_id
        self.member = member
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–µ–π –º—å—é—Ç–∞ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        voice_mute_role = member.guild.get_role(int(config.VOICE_MUTE_ID))
        text_mute_role = member.guild.get_role(int(config.TEXT_MUTE_ID))
        local_ban_role = member.guild.get_role(int(config.LOCAL_BAN_ID))
        
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å–Ω—è—Ç–∏—è –º—å—é—Ç–∞, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ä–æ–ª–∏
        self.remove_voice_mute_button.disabled = voice_mute_role not in member.roles
        self.remove_text_mute_button.disabled = text_mute_role not in member.roles
        self.remove_local_ban_button.disabled = local_ban_role not in member.roles
        
    @ui.button(label="–ì–æ–ª–æ—Å–æ–≤–æ–π –º—å—é—Ç", style=discord.ButtonStyle.grey, emoji="üîá", row=0)
    async def voice_mute_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        await interaction.response.send_modal(MuteModal(self.user_id, "–ì–æ–ª–æ—Å–æ–≤–æ–π", config.VOICE_MUTE_ID))
        
    @ui.button(label="–¢–µ–∫—Å—Ç–æ–≤—ã–π –º—å—é—Ç", style=discord.ButtonStyle.grey, emoji="üîí", row=0)
    async def text_mute_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        await interaction.response.send_modal(MuteModal(self.user_id, "–¢–µ–∫—Å—Ç–æ–≤—ã–π", config.TEXT_MUTE_ID))
    
    @ui.button(label="–°–Ω—è—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –º—å—é—Ç", style=discord.ButtonStyle.grey, emoji="üîä", row=1)
    async def remove_voice_mute_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –º—å—é—Ç–∞
        voice_mute_role = interaction.guild.get_role(int(config.VOICE_MUTE_ID))
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏
        if voice_mute_role not in self.member.roles:
            await interaction.response.send_message("–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –º—å—é—Ç–∞.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã
        await interaction.response.send_modal(UnmuteModal(self.member, "–ì–æ–ª–æ—Å–æ–≤–æ–π", config.VOICE_MUTE_ID))
    
    @ui.button(label="–°–Ω—è—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –º—å—é—Ç", style=discord.ButtonStyle.grey, emoji="üîì", row=1)
    async def remove_text_mute_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –º—å—é—Ç–∞
        text_mute_role = interaction.guild.get_role(int(config.TEXT_MUTE_ID))
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏
        if text_mute_role not in self.member.roles:
            await interaction.response.send_message("–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –º—å—é—Ç–∞.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã
        await interaction.response.send_modal(UnmuteModal(self.member, "–¢–µ–∫—Å—Ç–æ–≤—ã–π", config.TEXT_MUTE_ID))
    
    @ui.button(label="–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω", style=discord.ButtonStyle.grey, emoji="‚õî", row=2)
    async def local_ban_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏—á–∏–Ω—ã
        await interaction.response.send_modal(LocalBanModal(self.user_id))
        
    @ui.button(label="–°–Ω—è—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω", style=discord.ButtonStyle.grey, emoji="üîì", row=2)
    async def remove_local_ban_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤
        has_permission = False
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞
        local_ban_role = interaction.guild.get_role(int(config.LOCAL_BAN_ID))
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏
        if local_ban_role not in self.member.roles:
            await interaction.response.send_message("–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞.", ephemeral=True)
            return
            
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã
        await interaction.response.send_modal(RemoveLocalBanModal(self.member))

class Moderation(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="action", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏)")
    async def action(self, interaction: discord.Interaction, user: discord.User):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        has_permission = False
        
        # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ MODERATION –ø—É—Å—Ç, –æ—Ç–∫–∞–∑–∞—Ç—å –≤—Å–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
        if not config.MODERATION:
            await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞. –†–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.", ephemeral=True)
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª—é–±–æ–π –∏–∑ —Ä–æ–ª–µ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        for role_id in config.MODERATION:
            role = interaction.guild.get_role(int(role_id))
            if role in interaction.user.roles:
                has_permission = True
                break
                
        if not has_permission:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", ephemeral=True)
            return
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        member = interaction.guild.get_member(user.id)
        if not member:
            await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)
            return
            
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        embed = discord.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {user.name}",
            color=discord.Color.dark_embed(),
            timestamp=datetime.now()
        )
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        embed.add_field(name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", value=user.mention, inline=True)
        embed.add_field(name="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", value=f"```{user.id}```", inline=True)
        embed.add_field(name="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Discord", value=f"```{user.created_at.strftime("%Y-%m-%d %H:%M:%S")}```", inline=False)
        embed.add_field(name="–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É", value=f"```{member.joined_at.strftime("%Y-%m-%d %H:%M:%S")}```", inline=False)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        if user.avatar:
            embed.set_thumbnail(url=user.avatar.url)
            
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ {interaction.user.name}", icon_url=interaction.user.avatar.url if interaction.user.avatar else None)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º—å—é—Ç–∞
        view = MuteView(user.id, member)
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await interaction.response.send_message(embed=embed, view=view)

async def setup(bot):
    await bot.add_cog(Moderation(bot))


# –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–∏—á–∏–Ω —Å–Ω—è—Ç–∏—è –º—å—é—Ç–∞
class UnmuteModal(ui.Modal, title="–°–Ω—è—Ç—å –º—å—é—Ç"):
    def __init__(self, member, mute_type, role_id):
        super().__init__()
        self.member = member
        self.mute_type = mute_type
        self.role_id = role_id
        
    reason = ui.TextInput(
        label=f"–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è –º—å—é—Ç–∞",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è",
        min_length=3,
        max_length=100,
        required=True
    )
    
    async def on_submit(self, interaction: discord.Interaction):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏
        role = interaction.guild.get_role(int(self.role_id))
        
        if not role:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å.", ephemeral=True)
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏ (–º–æ–≥–ª–∞ –±—ã—Ç—å —Å–Ω—è—Ç–∞, –ø–æ–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ)
        if role not in self.member.roles:
            await interaction.response.send_message(f"–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–µ—Ç {self.mute_type.lower()} –º—å—é—Ç–∞.", ephemeral=True)
            return
            
        # –°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏
        try:
            reason_text = self.reason.value
            await self.member.remove_roles(role, reason=f"{self.mute_type} –º—å—é—Ç —Å–Ω—è—Ç: {reason_text}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            await interaction.response.send_message(
                f"‚úÖ {self.mute_type} –º—å—é—Ç —Å–Ω—è—Ç —Å {self.member.mention}. –ü—Ä–∏—á–∏–Ω–∞: {reason_text}", 
                ephemeral=False
            )
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            if hasattr(config, 'CHANNEL_LOG_ID') and config.CHANNEL_LOG_ID:
                try:
                    log_channel = interaction.guild.get_channel(int(config.CHANNEL_LOG_ID))
                    if log_channel:
                        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–∞
                        log_embed = discord.Embed(
                            title=f"{self.mute_type} –ú—å—é—Ç —Å–Ω—è—Ç",
                            color=discord.Color.dark_embed(),
                            timestamp=datetime.now()
                        )
                        log_embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention} ({interaction.user.id})", inline=False)
                        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{self.member.mention} ({self.member.id})", inline=False)
                        log_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason_text, inline=False)
                        
                        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
                        if self.member.avatar:
                            log_embed.set_thumbnail(url=self.member.avatar.url)
                            
                        await log_channel.send(embed=log_embed)
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Å–Ω—è—Ç–∏–µ –º—å—é—Ç–∞ –≤ –ª–æ–≥: {e}")
                    
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ —Å–Ω–∏–º–∞—Ç—å —Ä–æ–ª–∏ —Å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞
class LocalBanModal(ui.Modal, title="–ü—Ä–∏–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω"):
    def __init__(self, user_id):
        super().__init__()
        self.user_id = user_id
        
    duration = ui.TextInput(
        label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (7-30–¥ –∏–ª–∏ 0 –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ)",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 7–¥, 14–¥, 30–¥ –∏–ª–∏ 0)",
        min_length=1,
        max_length=3,
        required=True
    )
    
    reason = ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –Ω–∞–∫–∞–∑–∞–Ω–∏—è",
        min_length=3,
        max_length=100,
        required=True
    )
    
    async def on_submit(self, interaction: discord.Interaction):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        duration_str = self.duration.value.lower()
        permanent = False
        
        if duration_str == "0":
            permanent = True
            duration_display = "–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π"
        elif not re.match(r'^([7-9]|[1-2][0-9]|30)–¥$', duration_str):
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 7–¥ –¥–æ 30–¥ –∏–ª–∏ 0 –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ.", ephemeral=True)
            return
        else:
            duration_display = duration_str
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ —Ä–æ–ª–∏
        member = interaction.guild.get_member(self.user_id)
        ban_role = interaction.guild.get_role(int(config.LOCAL_BAN_ID))
        
        if not member or not ban_role:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞.", ephemeral=True)
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏ –±–∞–Ω–∞
        if ban_role in member.roles:
            await interaction.response.send_message("–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω.", ephemeral=True)
            return
            
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists('user_roles'):
            os.makedirs('user_roles')
            
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫—Ä–æ–º–µ @everyone) –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∂–µ
        role_ids = [str(role.id) for role in member.roles if role.id != interaction.guild.id]
        with open(f'user_roles/{member.id}.txt', 'w') as f:
            f.write(','.join(role_ids))
            
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –±–∞–Ω–∞
        try:
            reason_text = self.reason.value
            
            # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π, –∫—Ä–æ–º–µ @everyone
            roles_to_remove = [role for role in member.roles if role.id != interaction.guild.id]
            if roles_to_remove:
                await member.remove_roles(*roles_to_remove, reason=f"–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω: {reason_text}")
                
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –±–∞–Ω–∞
            await member.add_roles(ban_role, reason=f"–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω: {reason_text}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            await interaction.response.send_message(
                f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ {member.mention} –Ω–∞ {duration_display}. –ü—Ä–∏—á–∏–Ω–∞: {reason_text}", 
                ephemeral=False
            )
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            if hasattr(config, 'CHANNEL_LOG_ID') and config.CHANNEL_LOG_ID:
                try:
                    log_channel = interaction.guild.get_channel(int(config.CHANNEL_LOG_ID))
                    if log_channel:
                        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–∞
                        log_embed = discord.Embed(
                            title="–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω",
                            color=discord.Color.dark_embed(),
                            timestamp=datetime.now()
                        )
                        log_embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention} ({interaction.user.id})", inline=False)
                        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{member.mention} ({member.id})", inline=False)
                        log_embed.add_field(name="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=duration_display, inline=True)
                        log_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason_text, inline=True)
                        
                        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
                        if member.avatar:
                            log_embed.set_thumbnail(url=member.avatar.url)
                            
                        await log_channel.send(embed=log_embed)
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞ –≤ –ª–æ–≥: {e}")
            
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–Ω—è—Ç–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞
class RemoveLocalBanModal(ui.Modal, title="–°–Ω—è—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω"):
    def __init__(self, member):
        super().__init__()
        self.member = member
        
    reason = ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è",
        min_length=3,
        max_length=100,
        required=True
    )
    
    async def on_submit(self, interaction: discord.Interaction):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –±–∞–Ω–∞
        ban_role = interaction.guild.get_role(int(config.LOCAL_BAN_ID))
        
        if not ban_role:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞.", ephemeral=True)
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏ –±–∞–Ω–∞
        if ban_role not in self.member.roles:
            await interaction.response.send_message("–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞.", ephemeral=True)
            return
            
        # –°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –±–∞–Ω–∞
        try:
            reason_text = self.reason.value
            await self.member.remove_roles(ban_role, reason=f"–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω —Å–Ω—è—Ç: {reason_text}")
            
            # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
            roles_restored = False
            roles_file_path = f'user_roles/{self.member.id}.txt'
            
            if os.path.exists(roles_file_path):
                with open(roles_file_path, 'r') as f:
                    role_ids = f.read().strip().split(',')
                    
                roles_to_add = []
                for role_id in role_ids:
                    if role_id:  # –ü—Ä–æ–ø—É—Å–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
                        role = interaction.guild.get_role(int(role_id))
                        if role:
                            roles_to_add.append(role)
                
                if roles_to_add:
                    await self.member.add_roles(*roles_to_add, reason=f"–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ—Å–ª–µ —Å–Ω—è—Ç–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞")
                    roles_restored = True
                    
                # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ä–æ–ª–µ–π –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
                os.remove(roles_file_path)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            restored_msg = " –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –±—ã–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã." if roles_restored else ""
            await interaction.response.send_message(
                f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω —Å–Ω—è—Ç —Å {self.member.mention}. –ü—Ä–∏—á–∏–Ω–∞: {reason_text}.{restored_msg}", 
                ephemeral=False
            )
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            if hasattr(config, 'CHANNEL_LOG_ID') and config.CHANNEL_LOG_ID:
                try:
                    log_channel = interaction.guild.get_channel(int(config.CHANNEL_LOG_ID))
                    if log_channel:
                        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–∞
                        log_embed = discord.Embed(
                            title="–õ–æ–∫–∞–ª—å–Ω—ã–π –±–∞–Ω —Å–Ω—è—Ç",
                            color=discord.Color.dark_embed(),
                            timestamp=datetime.now()
                        )
                        log_embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{interaction.user.mention} ({interaction.user.id})", inline=False)
                        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{self.member.mention} ({self.member.id})", inline=False)
                        log_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason_text, inline=False)
                        
                        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
                        if self.member.avatar:
                            log_embed.set_thumbnail(url=self.member.avatar.url)
                            
                        await log_channel.send(embed=log_embed)
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Å–Ω—è—Ç–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∞ –≤ –ª–æ–≥: {e}")
                    
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ —Å–Ω–∏–º–∞—Ç—å —Ä–æ–ª–∏ —Å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)